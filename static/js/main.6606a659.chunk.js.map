{"version":3,"sources":["context.js","components/NewsLayout.js","scenes/NewsData.js","components/SearchForm.js","components/Header.js","components/NewSongLayout.js","components/NewSongData.js","components/SearchSongLayout.js","components/SearchSongData.js","scenes/Landing.js","scenes/NotFound.js","components/TwitchStreamLayout.js","components/TwitchStreamData.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","undefined","Provider","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","searchData","userInput","userSubmit","TEST_MODE","handleUserSearch","input","getSongs","inherits","createClass","key","value","_getSongs","asyncToGenerator","regenerator_default","a","mark","_callee","userSearch","response","wrap","_context","prev","next","Axios","get","sent","setState","data","songs","t0","console","log","stop","_x","react_default","createElement","props","children","Component","Consumer","NewsLayout","article","className","style","marginTop","boxShadow","backgroundImage","title","author","contents","href","url","rel","target","About","steamData","axios","newsData","appnews","newsitems","_this2","Fragment","paddingTop","map","components_NewsLayout","gid","SearchForm","onChange","event","defineProperty","name","onSubmit","e","preventDefault","marginRight","bind","type","placeholder","aria-label","display","Header","id","fontSize","NavLink","exact","to","data-toggle","data-target","aria-controls","aria-expanded","components_SearchForm","NewSongLayout","song","src","coverUrl","alt","margin","songName","marginBottom","songSubName","borderColor","padding","upVotes","downVotes","float","listStyleType","authorName","NewSongData","songData","components_NewSongLayout","SearchSongLayout","SearchSongData","components_SearchSongLayout","Landing","SearchSongData_SearchSongData","textShadow","components_NewSongData","NotFound","TwitchStreamLayout","channel","user_name","thumbnail_url","replace","paddingBottom","color","viewer_count","require","config","TwitchStreamData","streamData","post","process","twitchAuthData","twitchToken","access_token","twitchVerification","headers","Authorization","twitchFetchData","components_TwitchStreamLayout","App","context_Provider","BrowserRouter","backgroundColor","Switch","Route","path","component","NewsData","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6606a659.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Axios from \"axios\";\r\n// import SearchSongLayout from \"./components/SearchSongLayout\";\r\n\r\nexport const Context = React.createContext(undefined);\r\n\r\nexport class Provider extends React.Component {\r\n  state = {\r\n    searchData: [],\r\n    userInput: \"\",\r\n    userSubmit: \"\",\r\n    TEST_MODE: true,\r\n    handleUserSearch: input => {\r\n      // console.log(input);\r\n      this.getSongs(input);\r\n    }\r\n  };\r\n\r\n  async getSongs(userSearch) {\r\n    try {\r\n      const response = await Axios.get(\r\n        `https://beatsaver.com/api/songs/search/all/${userSearch}`\r\n      );\r\n      this.setState({\r\n        searchData: response.data.songs\r\n      });\r\n      // console.log(this.state.searchData);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass NewsLayout extends Component {\r\n  render() {\r\n    const { article } = this.props;\r\n    // console.log(article);\r\n    return (\r\n      <div\r\n        className=\"card container\"\r\n        style={{\r\n          marginTop: \"10%\",\r\n          boxShadow: \"0em 0em 1.25em purple\",\r\n          backgroundImage: \"linear-gradient(to right, white, #9ca2ad)\"\r\n        }}\r\n      >\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{article.title}</h5>\r\n          <h6 className=\"card-subtitle mb-2 text-muted\">\r\n            Author: {article.author}\r\n          </h6>\r\n          <p className=\"card-text\">{article.contents}</p>\r\n          <a\r\n            href={article.url}\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n            className=\"card-link\"\r\n          >\r\n            Go To Story\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nNewsLayout.propTypes = {\r\n  article: PropTypes.object.isRequired\r\n};\r\nexport default NewsLayout;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../context\";\r\nimport axios from \"axios\";\r\nimport NewsLayout from \"../components/NewsLayout\";\r\n// import Header from \"../components/Header\";\r\n\r\nexport default class About extends Component {\r\n  state = {\r\n    steamData: []\r\n  };\r\n  async componentDidMount() {\r\n    const newsData = await axios.get(\r\n      \"http://api.steampowered.com/ISteamNews/GetNewsForApp/v0002/?appid=620980&maxlength=300&format=json\"\r\n    );\r\n    this.setState({\r\n      steamData: newsData.data.appnews.newsitems\r\n    });\r\n    // console.log(this.state.steamData);\r\n  }\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          return (\r\n            <React.Fragment>\r\n              <div\r\n                className=\"container\"\r\n                style={{\r\n                  paddingTop: \"20%\"\r\n                }}\r\n              >\r\n                {this.state.steamData.map(article => (\r\n                  <NewsLayout key={article.gid} article={article} />\r\n                ))}\r\n              </div>\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../context\";\r\n\r\nclass SearchForm extends Component {\r\n  state = {\r\n    userInput: \"\",\r\n    handleUserSearch: undefined\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    // console.log(this.state.userInput);\r\n  };\r\n  onSubmit = (value, e) => {\r\n    e.preventDefault();\r\n    value.handleUserSearch(this.state.userInput);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          return (\r\n            <div\r\n              className=\"row\"\r\n              style={{\r\n                marginRight: \"5%\"\r\n              }}\r\n            >\r\n              <form\r\n                className=\"form-inline my-2 my-lg-0\"\r\n                onSubmit={this.onSubmit.bind(this, value)}\r\n              >\r\n                <input\r\n                  className=\"form-control mr-sm-2\"\r\n                  type=\"text\"\r\n                  name=\"userInput\"\r\n                  placeholder=\"Search BeatSaver...\"\r\n                  aria-label=\"Search\"\r\n                  onChange={this.onChange}\r\n                  style={{\r\n                    display: \"inline\",\r\n\r\n                    boxShadow: \"0em 0em 2em purple\"\r\n                  }}\r\n                />\r\n              </form>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchForm;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport SearchForm from \"./SearchForm\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div\r\n      className=\"pos-f-t fixed-top\"\r\n      style={{\r\n        boxShadow: \"0em 0em .75em purple\"\r\n      }}\r\n    >\r\n      <div className=\"collapse\" id=\"navbarToggleExternalContent\">\r\n        <div className=\"bg-dark p-4\">\r\n          <h5\r\n            className=\"text-white h6 nav-item container\"\r\n            style={{\r\n              fontSize: \"2em\"\r\n            }}\r\n          >\r\n            <NavLink exact to=\"/\" className=\"nav-link active\">\r\n              Home\r\n            </NavLink>\r\n            <NavLink exact to=\"/Streams\" className=\"nav-link active\">\r\n              Streams\r\n            </NavLink>\r\n            <NavLink exact to=\"/News\" className=\"nav-link active\">\r\n              News\r\n            </NavLink>\r\n          </h5>\r\n        </div>\r\n      </div>\r\n      <nav className=\"navbar navbar-dark bg-dark rounded-bottom container-fluid\">\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarToggleExternalContent\"\r\n          aria-controls=\"navbarToggleExternalContent\"\r\n          aria-expanded=\"true\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <SearchForm />\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass NewSongLayout extends React.Component {\r\n  render() {\r\n    const { song } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className=\"card mb-3\"\r\n          style={{\r\n            boxShadow: \"0em 0em 1.25em purple\",\r\n            backgroundImage: \"linear-gradient(to right, white, #9ca2ad)\"\r\n          }}\r\n        >\r\n          <img className=\"card-img-top\" src={song.coverUrl} alt=\"Cover\" />\r\n          <div className=\"card-body\">\r\n            <div>\r\n              <h6\r\n                className=\"card-title text-nowrap text-truncate\"\r\n                style={{ margin: \"0\" }}\r\n              >\r\n                <strong>{song.songName}</strong>\r\n              </h6>\r\n              <p\r\n                className=\"text-muted text-nowrap text-truncate\"\r\n                style={{ marginBottom: \"0\" }}\r\n              >\r\n                {song.songSubName}\r\n              </p>\r\n            </div>\r\n\r\n            <hr\r\n              style={{\r\n                borderColor: \"black\",\r\n                margin: \"0\",\r\n                padding: \"0\"\r\n              }}\r\n            />\r\n            <div>\r\n              <p\r\n                className=\"card-text\"\r\n                style={{\r\n                  display: \"inline\"\r\n                }}\r\n              >\r\n                <i className=\"fas fa-arrow-alt-circle-up\" />\r\n                {song.upVotes}\r\n              </p>\r\n              <p\r\n                className=\"card-text\"\r\n                style={{\r\n                  display: \"inline\"\r\n                }}\r\n              >\r\n                <i className=\"fas fa-arrow-alt-circle-down\" />\r\n                {song.downVotes}\r\n              </p>\r\n              <div\r\n                style={{\r\n                  display: \"inline\"\r\n                }}\r\n              >\r\n                <ul\r\n                  style={{\r\n                    display: \"inline\",\r\n                    float: \"right\"\r\n                  }}\r\n                >\r\n                  <li\r\n                    style={{\r\n                      listStyleType: \"none\"\r\n                    }}\r\n                  >\r\n                    <strong>ID: {song.key}</strong>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n\r\n            <p className=\"card-text\">\r\n              <small className=\"text-muted\">{song.authorName}</small>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nNewSongLayout.propTypes = {\r\n  song: PropTypes.object.isRequired\r\n};\r\nexport default NewSongLayout;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport NewSongLayout from \"./NewSongLayout\";\r\n\r\nclass NewSongData extends React.Component {\r\n  state = {\r\n    songData: []\r\n  };\r\n  async componentWillMount() {\r\n    try {\r\n      const songData = await axios.get(\r\n        \"https://beatsaver.com/api/songs/new/{start?\"\r\n      );\r\n      this.setState({\r\n        songData: songData.data.songs\r\n      });\r\n      console.log(songData);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.songData.map(song => (\r\n          <NewSongLayout key={song.id} song={song} />\r\n        ))}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default NewSongData;\r\n","import React from \"react\";\r\nimport { Consumer } from \"../context\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass SearchSongLayout extends React.Component {\r\n  render() {\r\n    const { song } = this.props;\r\n\r\n    console.log(song);\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          return (\r\n            <React.Fragment>\r\n              <div\r\n                className=\"card mb-3\"\r\n                style={{\r\n                  boxShadow: \"0em 0em 1.25em purple\",\r\n                  backgroundImage: \"linear-gradient(to right, white, #9ca2ad)\"\r\n                }}\r\n              >\r\n                <img className=\"card-img-top\" src={song.coverUrl} alt=\"Cover\" />\r\n                <div className=\"card-body\">\r\n                  <div>\r\n                    <h6\r\n                      className=\"card-title text-nowrap text-truncate\"\r\n                      style={{\r\n                        margin: \"0\"\r\n                      }}\r\n                    >\r\n                      {song.songName}\r\n                    </h6>\r\n                    <p\r\n                      className=\"text-muted text-nowrap text-truncate\"\r\n                      style={{\r\n                        margin: \"0\"\r\n                      }}\r\n                    >\r\n                      {song.songSubName}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <hr\r\n                    style={{\r\n                      borderColor: \"black\",\r\n                      margin: \"0\",\r\n                      padding: \"0\"\r\n                    }}\r\n                  />\r\n                  <div>\r\n                    <p\r\n                      className=\"card-text\"\r\n                      style={{\r\n                        display: \"inline\"\r\n                      }}\r\n                    >\r\n                      <i className=\"fas fa-arrow-alt-circle-up\" />\r\n                      {song.upVotes}\r\n                    </p>\r\n                    <p\r\n                      className=\"card-text\"\r\n                      style={{\r\n                        display: \"inline\"\r\n                      }}\r\n                    >\r\n                      <i className=\"fas fa-arrow-alt-circle-down\" />\r\n                      {song.downVotes}\r\n                    </p>\r\n                    <div\r\n                      style={{\r\n                        display: \"inline\"\r\n                      }}\r\n                    >\r\n                      <ul\r\n                        style={{\r\n                          display: \"inline\",\r\n                          float: \"right\"\r\n                        }}\r\n                      >\r\n                        <li\r\n                          style={{\r\n                            listStyleType: \"none\"\r\n                          }}\r\n                        >\r\n                          <strong>ID: {song.key}</strong>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                  <p className=\"card-text\">\r\n                    <small className=\"text-muted\">{song.authorName}</small>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nSearchSongLayout.propTypes = {\r\n  song: PropTypes.object.isRequired\r\n};\r\nexport default SearchSongLayout;\r\n","import React, { Component } from \"react\";\r\n\r\nimport SearchSongLayout from \"./SearchSongLayout\";\r\nimport { Consumer } from \"../context\";\r\n\r\nexport default class SearchSongData extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          return (\r\n            <React.Fragment>\r\n              {/* {console.log(value.searchData)} */}\r\n              {value.searchData.map(song => (\r\n                <SearchSongLayout key={song.id} song={song} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport NewSongData from \"../components/NewSongData\";\r\nimport { Consumer } from \"../context\";\r\n// import SearchForm from \"../components/SearchForm\";\r\nimport SearchSongData from \"../components/SearchSongData\";\r\n// import SearchSongLayout from \"../components/SearchSongLayout\";\r\n// import Axios from \"axios\";\r\n\r\nexport default class Landing extends React.Component {\r\n  // async generalSearch() {\r\n  //   try {\r\n  //     const searchData = await Axios.get(\r\n  //       \"https://beatsaver.com/api/songs/search/name/bomb+nissim\"\r\n  //     );\r\n  //     this.setState({\r\n  //       searchData: searchData.data.songs\r\n  //     });\r\n  //     console.log(searchData);\r\n  //   } catch (error) {}\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          return (\r\n            <div\r\n              className=\"container\"\r\n              style={{\r\n                paddingTop: \"30%\"\r\n              }}\r\n            >\r\n              <SearchSongData />\r\n              <hr\r\n                style={{\r\n                  borderColor: \"white\",\r\n                  // marginTop: \"25%\",\r\n                  boxShadow: \"0em 0em .2em purple\"\r\n                }}\r\n              />\r\n\r\n              <h1\r\n                className=\"display-5 text-center text-white\"\r\n                style={{\r\n                  textShadow: \"0em 0em 3em purple\"\r\n                }}\r\n              >\r\n                Newest Maps\r\n              </h1>\r\n              <hr\r\n                style={{\r\n                  borderColor: \"white\",\r\n                  // paddingBottom: \"25%\",\r\n                  boxShadow: \"0em 0em .2em purple\"\r\n                }}\r\n              />\r\n\r\n              <NewSongData />\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>404</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass TwitchStreamLayout extends Component {\r\n  render() {\r\n    const { channel } = this.props;\r\n    const twitchURL = \"http://twitch.tv/\";\r\n    console.log(channel);\r\n    console.log(twitchURL);\r\n    return (\r\n      <a\r\n        href={twitchURL + channel.user_name}\r\n        rel=\"noopener noreferrer\"\r\n        target=\"_blank\"\r\n      >\r\n        <div className=\"container\">\r\n          <div\r\n            className=\"card mb-3\"\r\n            style={{\r\n              marginTop: \"10%\",\r\n              boxShadow: \"0em 0em 1.25em purple\",\r\n              backgroundImage: \"linear-gradient(to right, white, #9ca2ad)\"\r\n            }}\r\n          >\r\n            <img\r\n              className=\"card-img-top\"\r\n              src={channel.thumbnail_url.replace(\r\n                /{width}x{height}/,\r\n                \"1280x720\"\r\n              )}\r\n              alt=\"Cover\"\r\n            />\r\n            <div className=\"card-body\">\r\n              <div>\r\n                <h4\r\n                  className=\"card-title text-nowrap text-truncate\"\r\n                  style={{\r\n                    margin: \"0\",\r\n                    paddingBottom: \"2%\"\r\n                  }}\r\n                >\r\n                  <strong>{channel.user_name}</strong>\r\n                </h4>\r\n                <p\r\n                  className=\"text-muted text-nowrap text-truncate\"\r\n                  style={{ marginBottom: \"0\" }}\r\n                >\r\n                  {channel.title}\r\n                </p>\r\n              </div>\r\n\r\n              <hr\r\n                style={{\r\n                  borderColor: \"black\",\r\n                  margin: \"0\",\r\n                  padding: \"0\"\r\n                }}\r\n              />\r\n              <div>\r\n                <p\r\n                  className=\"card-text\"\r\n                  style={{\r\n                    display: \"inline\"\r\n                  }}\r\n                >\r\n                  <i\r\n                    className=\"fas fa-users\"\r\n                    style={{\r\n                      color: \"red\",\r\n                      marginRight: \"4px\"\r\n                    }}\r\n                  />\r\n                  <strong>{channel.viewer_count}</strong>\r\n                </p>\r\n                <p\r\n                  className=\"card-text\"\r\n                  style={{\r\n                    display: \"inline\"\r\n                  }}\r\n                />\r\n                <div\r\n                  style={{\r\n                    display: \"inline\"\r\n                  }}\r\n                >\r\n                  <ul\r\n                    style={{\r\n                      display: \"inline\",\r\n                      float: \"right\"\r\n                    }}\r\n                  >\r\n                    <li\r\n                      style={{\r\n                        listStyleType: \"none\"\r\n                      }}\r\n                    >\r\n                      {/* <strong>ID: {}</strong> */}\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n\r\n              <p className=\"card-text\">\r\n                {/* <small className=\"text-muted\">{}</small> */}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </a>\r\n    );\r\n  }\r\n}\r\nexport default TwitchStreamLayout;\r\n","import React, { Component } from \"react\";\r\nimport TwitchStreamLayout from \"./TwitchStreamLayout\";\r\nimport axios from \"axios\";\r\n\r\nrequire(\"dotenv\").config();\r\n\r\nclass TwitchStreamData extends Component {\r\n  state = {\r\n    streamData: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const twitchAuthData = await axios.post(process.env.REACT_APP_TWITCH_POST);\r\n    const twitchToken = twitchAuthData.data.access_token;\r\n    // console.log(twitchToken);\r\n    const twitchVerification = {\r\n      headers: { Authorization: `Bearer ${twitchToken}` }\r\n    };\r\n    const twitchFetchData = await axios.get(\r\n      \"https://api.twitch.tv/helix/streams?game_id=503116\",\r\n      twitchVerification\r\n    );\r\n    this.setState({\r\n      streamData: twitchFetchData.data.data\r\n    });\r\n    // console.log(this.state.streamData);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          paddingTop: \"20%\",\r\n          paddingBottom: \"10%\"\r\n        }}\r\n      >\r\n        {this.state.streamData.map(channel => (\r\n          <TwitchStreamLayout key={channel.id} channel={channel} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TwitchStreamData;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport NewsData from \"./scenes/NewsData\";\nimport Header from \"./components/Header\";\nimport Landing from \"./scenes/Landing\";\nimport NotFound from \"./scenes/NotFound\";\nimport TwitchStreamData from \"./components/TwitchStreamData\";\nimport { Provider } from \"./context\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <React.Fragment>\n            <div\n              className=\"App\"\n              style={{\n                backgroundColor: \"black\"\n              }}\n            >\n              <Header />\n              <Switch>\n                <Route exact path=\"/\" component={Landing} />\n                <Route path=\"/News\" component={NewsData} />\n                <Route path=\"/Streams\" component={TwitchStreamData} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </React.Fragment>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nrequire(\"dotenv\").config();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}